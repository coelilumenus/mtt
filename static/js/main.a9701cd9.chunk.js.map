{"version":3,"sources":["redux/reducers.ts","utils/constants.ts","redux/actions.ts","redux/hooks.ts","pages/Login.tsx","components/AddItem.tsx","components/EmptyList.tsx","components/UserItem.tsx","utils/data.functions.ts","redux/store.ts","utils/itemList.functions.tsx","components/ItemList.tsx","components/modals/ModalAdd.tsx","components/modals/ModalDelete.tsx","components/modals/ModalEdit.tsx","components/modals/ModalName.tsx","components/NavBar.tsx","components/Pagination.tsx","pages/Profile.tsx","utils/ProtectedRoute.tsx","App.tsx","index.tsx"],"names":["currentId","$auth","$logout","$setMax","$incr","$decr","$updateLength","$ModalAdd","$ModalName","$ModalEdit","$ModalDelete","$modalDestroy","setMax","value","type","updateLength","modalDestroy","useAppDispatch","useDispatch","useAppSelector","useSelector","Login","React","useState","login","setInputLogin","password","setInputPass","isValidPass","setValidPass","isInvalidPass","setInvalidPass","isValidLogin","setValidLogin","isInvalidLogin","setInvalidLogin","dispatch","history","useHistory","Container","className","Form","FormGroup","Label","for","Input","name","id","valid","invalid","onChange","e","currentTarget","trim","length","handleLogin","handlePassword","Button","onClick","push","AddItem","modalTrigger","Row","Col","outline","size","EmptyList","UserItem","city","editTrigger","deleteTrigger","fetchData","localStorage","getItem","setItem","JSON","stringify","parse","getUserData","curId","store","getState","auth","data","hasOwnProperty","getUserName","getDataLength","authOrCreate","current","i","isAuth","newData","setData","configureStore","reducer","state","action","page","min","max","isMin","isMax","newState","updateEdges","Math","floor","currentData","modal","isModal","component","sortName","a","b","sortCity","ItemList","icon","noIcon","sortBy","setSortBy","sortNameIcon","setSortNameIcon","sortCityIcon","setSortCityIcon","elements","array","start","finish","newArr","pageSlicer","sortFn","items","sort","forEach","createItems","Table","ModalAdd","setName","setCity","addHandler","userData","random","toString","substr","Modal","isOpen","centered","fullscreen","ModalHeader","ModalBody","nameInputHandler","cityInputHandler","ModalFooter","color","ModalDelete","item","filter","disabled","deleteHandler","ModalEdit","changeHandler","ModalName","isValid","setValid","isInvalid","setInvalid","setNameHandler","SwitchName","NavBar","logoutHandler","Pagination","prevHandler","nextHandler","SwitchEmptyStatus","selectLength","SwitchModalStatus","Profile","fluid","ProtectedRoute","routeProps","to","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9701cd9.chunk.js","sourcesContent":["import { Reducer } from \"redux\"\r\nimport { $auth, $decr, $incr, $itemsOnPage, $logout, $ModalAdd, $ModalDelete, $modalDestroy, $ModalEdit, $ModalName, $setMax, $updateLength } from \"../utils/constants\"\r\nimport { authOrCreate, getDataLength } from \"../utils/data.functions\"\r\n\r\nlet currentId: number;\r\n\r\nexport const authReducer: Reducer = (state = { isAuth: false }, action) => {\r\n  const value = action.value\r\n\r\n  switch (action.type) {\r\n    case $auth:\r\n      const { login, password } = value\r\n      currentId = authOrCreate({ login, password }).id!\r\n      return state = authOrCreate({ login, password })\r\n    case $logout:\r\n      return state = { isAuth: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const pageReducer: Reducer = (state = { current: 0, min: 0, max: 0, isMin: true, isMax: false }, action) => {\r\n  const newState = { ...state }\r\n\r\n  const updateEdges = () => {\r\n    newState.isMax = (newState.current === newState.max) ? true : false\r\n    newState.isMin = (newState.current === newState.min) ? true : false\r\n  }\r\n\r\n  switch (action.type) {\r\n    case $incr:\r\n      if (!newState.isMax) {\r\n        newState.current += 1\r\n      }\r\n      updateEdges()\r\n      return state = newState\r\n\r\n    case $decr:\r\n      if (!newState.isMin) {\r\n        newState.current -= 1\r\n      }\r\n      updateEdges()\r\n      return state = newState\r\n\r\n    case $setMax:\r\n      \r\n      newState.max = (action.value > 0) ? (Math.floor(action.value / ($itemsOnPage + 1))) : 0\r\n      updateEdges()\r\n      return state = newState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const currentDataReducer: Reducer = (state = { length: 0 }, action) => {\r\n  const newState = { ...state }\r\n\r\n  switch (action.type) {\r\n    case $updateLength:\r\n      newState.length = getDataLength(currentId)\r\n      return state = newState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const modalReducer: Reducer = (state = { isModal: false }, action) => {\r\n  switch (action.type) {\r\n    case $modalDestroy:\r\n      return state = { isModal: false }\r\n    case $ModalAdd:\r\n      return state = { isModal: true, component: $ModalAdd }\r\n    case $ModalName:\r\n      return state = { isModal: true, component: $ModalName }\r\n    case $ModalEdit:\r\n      return state = { isModal: true, component: $ModalEdit, id: action.value }\r\n    case $ModalDelete:\r\n      return state = { isModal: true, component: $ModalDelete, id: action.value }\r\n    default:\r\n      return state\r\n  }\r\n}","export const $auth = 'auth'\r\nexport const $logout = 'logout'\r\nexport const $getState = 'getState'\r\nexport const $setMax = 'setMax'\r\nexport const $incr = 'incr'\r\nexport const $decr = 'decr'\r\nexport const $updateLength = 'updateLength'\r\nexport const $ModalAdd = 'ModalAdd'\r\nexport const $ModalName = 'ModalName'\r\nexport const $ModalEdit = 'ModalEdit'\r\nexport const $ModalDelete = 'ModalDelete'\r\nexport const $modalDestroy = 'modalDestroy'\r\nexport const $itemsOnPage = 5","import { Auth } from \"../interfaces/types\"\r\nimport { $auth, $decr, $incr, $logout, $ModalAdd, $ModalDelete, $modalDestroy, $ModalEdit, $ModalName, $setMax, $updateLength } from \"../utils/constants\"\r\n\r\nexport const auth = (value: Auth) => ({type: $auth, value})\r\nexport const logout = () => ({type: $logout})\r\n\r\nexport const setMax = (value: number) => ({type: $setMax, value})\r\nexport const incr = () => ({type: $incr})\r\nexport const decr = () => ({type: $decr})\r\n\r\nexport const updateLength = () => ({type: $updateLength})\r\n\r\nexport const modalDestroy = () => ({type: $modalDestroy})\r\nexport const ModalAddAction = () => ({type: $ModalAdd})\r\nexport const ModalNameAction = () => ({type: $ModalName})\r\nexport const ModalEditAction = (value: string) => ({type: $ModalEdit, value})\r\nexport const ModalDeleteAction = (value: string) => ({type: $ModalDelete, value})","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Container, Button, Form, FormGroup, Label, Input } from \"reactstrap\"\r\nimport { auth } from \"../redux/actions\"\r\nimport { useAppDispatch } from \"../redux/hooks\"\r\n\r\nexport const Login: React.FC = () => {\r\n  const [login, setInputLogin] = React.useState('')\r\n  const [password, setInputPass] = React.useState('')\r\n  const [isValidPass, setValidPass] = React.useState(false)\r\n  const [isInvalidPass, setInvalidPass] = React.useState(false)\r\n  const [isValidLogin, setValidLogin] = React.useState(false)\r\n  const [isInvalidLogin, setInvalidLogin] = React.useState(false)\r\n  const dispatch = useAppDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleAuth = () => {\r\n    if (login.trim().length > 0 && password.trim().length > 0) {\r\n      dispatch(auth({ login: login.trim(), password: password.trim() }))\r\n      history.push('/mtt/profile')\r\n    } else {\r\n      if (login.trim().length > 0) {\r\n        setValidLogin(true)\r\n      } else {\r\n        setInvalidLogin(true)\r\n      }\r\n      \r\n      if (password.trim().length > 0) {\r\n        setValidPass(true)\r\n      } else {\r\n        setInvalidPass(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleLogin = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value\r\n    \r\n    setInvalidLogin(false)\r\n    \r\n    if (value.trim().length > 0) {\r\n      setValidLogin(true)\r\n    } else {\r\n      setValidLogin(false)\r\n    }\r\n    \r\n    setInputLogin(value)\r\n  }\r\n\r\n  const handlePassword = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value\r\n    \r\n    setInvalidPass(false)\r\n    \r\n    if (value.trim().length > 0) {\r\n      setValidPass(true)\r\n    } else {\r\n      setValidPass(false)\r\n    }\r\n    \r\n    setInputPass(value)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n      <Form className=\"w-50\">\r\n        <FormGroup>\r\n          <Label for=\"login\">Логин</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"login\"\r\n            id=\"login\"\r\n            valid={isValidLogin}\r\n            invalid={isInvalidLogin}\r\n            value={login}\r\n            onChange={(e) => handleLogin(e)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Пароль</Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            valid={isValidPass}\r\n            invalid={isInvalidPass}\r\n            value={password}\r\n            onChange={(e) => handlePassword(e)}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          className=\"mt-3\"\r\n          onClick={handleAuth}\r\n        >Войти</Button>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}","import React from \"react\"\r\nimport { Row, Col, Button } from \"reactstrap\"\r\nimport { ModalAddAction } from \"../redux/actions\"\r\nimport { useAppDispatch } from \"../redux/hooks\"\r\n\r\nexport const AddItem: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  \r\n  const modalTrigger = () => {\r\n    dispatch(ModalAddAction())\r\n  }\r\n  \r\n  return (\r\n    <Row>\r\n      <Col className=\"mt-4\">\r\n        <Button\r\n          outline\r\n          size=\"xs\"\r\n          onClick={() => modalTrigger()}\r\n        >Добавить пользователя</Button>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React from \"react\"\r\n\r\nexport const EmptyList: React.FC = () => {\r\n  return (\r\n    <div className=\"mt-3 text-secondary fs-4 fw-normal\">\r\n      Список пользователей пуст\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport { Item } from \"../interfaces/types\"\r\nimport { ModalDeleteAction, ModalEditAction } from \"../redux/actions\"\r\nimport { useAppDispatch } from \"../redux/hooks\"\r\n\r\nexport const UserItem: React.FC<Item> = ({ name, city, id }) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const editTrigger = () => {\r\n    dispatch(ModalEditAction(id))\r\n  }\r\n  \r\n  const deleteTrigger = () => {\r\n    dispatch(ModalDeleteAction(id))\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{city}</td>\r\n      <td className=\"d-flex justify-content-end\">\r\n        <span\r\n          className=\"material-icons-outlined text-secondary pointer\"\r\n          onClick={() => editTrigger()}\r\n        >edit</span>\r\n        <span\r\n          className=\"material-icons-outlined text-secondary pointer\"\r\n          onClick={() => deleteTrigger()}\r\n        >delete</span>\r\n      </td>\r\n    </tr>\r\n  )\r\n}","import { Auth, Item, User } from \"../interfaces/types\"\r\nimport { store } from \"../redux/store\"\r\n\r\nexport function fetchData(): Array<User> {\r\n  if (localStorage.getItem('data')) {\r\n    return JSON.parse(localStorage.getItem('data')!)\r\n  } else {\r\n    localStorage.setItem('data', JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem('data')!)\r\n  }\r\n}\r\n\r\nexport function genId(): string {\r\n  return '_' + Math.random().toString(36).substr(2, 9);\r\n} \r\n\r\nexport function getUserData(): Array<Item> {\r\n  const curId = store.getState().auth.id\r\n  const data = fetchData()\r\n  const isData = data[curId]?.hasOwnProperty('data')\r\n  const userData = (isData) ? data[curId]?.data! : []\r\n  \r\n  return userData\r\n}\r\n\r\nexport function getUserName(): string {\r\n  const curId = store.getState().auth.id\r\n  const data = fetchData()\r\n  const isData = data[curId]?.hasOwnProperty('name')\r\n  const userName = (isData) ? data[curId]?.name! : ''\r\n  \r\n  return userName\r\n}\r\n\r\nexport function getDataLength(id: number): number {\r\n  const curId = id\r\n  const data = fetchData()\r\n  const isData = data[curId]?.hasOwnProperty('data')\r\n  const length = (isData) ? data[curId]?.data!.length : 0\r\n  \r\n  return length\r\n}\r\n\r\nexport function authOrCreate(current: Auth) {\r\n  const data = fetchData()\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].auth) {\r\n      if (data[i].auth!.login === current.login) {\r\n        return (data[i].auth!.password === current.password)\r\n          ? { isAuth: true, id: i }\r\n          : { isAuth: false }\r\n      }\r\n    }\r\n  }\r\n\r\n  const newData = data\r\n  newData.push({ auth: current })\r\n  setData(newData)\r\n\r\n  return { isAuth: true, id: (newData.length - 1) }\r\n}\r\n\r\nexport function setData(value: Array<User>) {\r\n  localStorage.setItem('data', JSON.stringify(value))\r\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport { authReducer, currentDataReducer, modalReducer, pageReducer } from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    page: pageReducer,\r\n    currentData: currentDataReducer,\r\n    modal: modalReducer\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import { UserItem } from \"../components/UserItem\";\r\nimport { Item } from \"../interfaces/types\";\r\nimport { store } from \"../redux/store\";\r\nimport { $itemsOnPage } from \"./constants\";\r\nimport { getUserData } from \"./data.functions\";\r\n\r\ntype sortFn = (a: Item, b: Item) => number\r\n\r\nexport function pageSlicer(array: JSX.Element[]) {\r\n  const pageData = store.getState().page\r\n  const start = (pageData.current * $itemsOnPage)\r\n  const finish = start + $itemsOnPage \r\n  const newArr: JSX.Element[] = []\r\n  \r\n  for (let i = start; i < finish; i++) {\r\n    if (typeof array[i] !== 'undefined') {\r\n      newArr.push(array[i])\r\n    }\r\n  }\r\n  \r\n  return newArr\r\n}\r\n\r\nexport function createItems(sortFn: sortFn) {\r\n  const items: JSX.Element[] = []\r\n  \r\n  getUserData().sort(sortFn).forEach(({name, city, id}) => {\r\n    return items.push(<UserItem name={name} city={city} id={id} key={id} />)\r\n  })\r\n  \r\n  return items\r\n}\r\n\r\nexport const sortName = (a: Item, b: Item) => {\r\n  if (a.name > b.name) {\r\n    return 1;\r\n  }\r\n  if (a.name < b.name) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport const sortCity = (a: Item, b: Item) => {\r\n  if (a.city > b.city) {\r\n    return 1;\r\n  }\r\n  if (a.city < b.city) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}","import React from \"react\"\r\nimport { Row, Col, Table } from \"reactstrap\"\r\nimport { useAppSelector } from \"../redux/hooks\"\r\nimport { pageSlicer, sortName, sortCity, createItems } from \"../utils/itemList.functions\"\r\n\r\nexport const ItemList: React.FC = () => {\r\n  const icon = <span className=\"material-icons-outlined text-secondary pointer align-middle fs-5 mb-1\">expand_less</span>\r\n  const noIcon = <div className=\"no-icon\"></div>\r\n  \r\n  useAppSelector((state) => state.modal)\r\n  useAppSelector((state) => state.page)\r\n  const [sortBy, setSortBy] = React.useState(() => sortName)\r\n  const [sortNameIcon, setSortNameIcon] = React.useState(icon)\r\n  const [sortCityIcon, setSortCityIcon] = React.useState(<></>)\r\n\r\n  const sortNameHandler = () => {\r\n    setSortNameIcon(icon)\r\n    setSortCityIcon(noIcon)\r\n    setSortBy(() => sortName)\r\n  }\r\n  \r\n  const sortCityHandler = () => {\r\n    setSortNameIcon(noIcon)\r\n    setSortCityIcon(icon)\r\n    setSortBy(() => sortCity)\r\n  }\r\n  \r\n  const elements: JSX.Element[] = pageSlicer(createItems(sortBy))\r\n\r\n  return (\r\n    <Row>\r\n      <Col className=\"mt-4\">\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"text-secondary fs-5 fw-normal pointer\"\r\n                onClick={() => sortNameHandler()}\r\n              >ФИО {sortNameIcon}\r\n              </th>\r\n              <th\r\n                className=\"text-secondary fs-5 fw-normal pointer\"\r\n                onClick={() => sortCityHandler()}\r\n              >Город {sortCityIcon}\r\n              </th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"border-top-0\">\r\n            {elements}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React from \"react\"\r\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, ModalFooter, Button } from \"reactstrap\"\r\nimport { modalDestroy, updateLength, setMax } from \"../../redux/actions\"\r\nimport { useAppDispatch } from \"../../redux/hooks\"\r\nimport { store } from \"../../redux/store\"\r\nimport { getUserData, genId, fetchData, setData } from \"../../utils/data.functions\"\r\n\r\nexport const ModalAdd: React.FC = () => {\r\n  const [name, setName] = React.useState('')\r\n  const [city, setCity] = React.useState('')\r\n  const dispatch = useAppDispatch()\r\n\r\n  const nameInputHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  const cityInputHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value)\r\n  }\r\n\r\n  const discardHandler = () => {\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  const addHandler = () => {\r\n    const userData = getUserData()\r\n    const curId = store.getState().auth.id\r\n    const id = genId()\r\n    userData.push({ name, city, id })\r\n\r\n\r\n    const data = fetchData()\r\n    data[curId].data = userData\r\n    setData(data)\r\n    dispatch(updateLength())\r\n    dispatch(setMax(store.getState().currentData.length))\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      centered\r\n      fullscreen=\"md\"\r\n    >\r\n      <ModalHeader>\r\n        Добавление пользователя\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"fullname\">ФИО:</Label>\r\n            <Input\r\n              value={name}\r\n              onChange={(e) => nameInputHandler(e)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"city\">Город:</Label>\r\n            <Input\r\n              value={city}\r\n              onChange={(e) => cityInputHandler(e)}\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => discardHandler()}\r\n        >Отмена</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => addHandler()}\r\n        >Добавить</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}","import { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, ModalFooter, Button } from \"reactstrap\"\r\nimport { modalDestroy, updateLength, setMax } from \"../../redux/actions\"\r\nimport { useAppDispatch } from \"../../redux/hooks\"\r\nimport { store } from \"../../redux/store\"\r\nimport { getUserData, fetchData, setData } from \"../../utils/data.functions\"\r\n\r\nexport const ModalDelete: React.FC = () => {\r\n  const id: string = store.getState().modal.id\r\n  const item = getUserData().filter((item) => item.id === id)[0]\r\n  const dispatch = useAppDispatch()\r\n\r\n  const discardHandler = () => {\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  const deleteHandler = () => {\r\n    const userData = getUserData().filter((item) => item.id !== id)\r\n\r\n    const curId = store.getState().auth.id\r\n    const data = fetchData()\r\n    data[curId].data = userData\r\n    setData(data)\r\n    dispatch(updateLength())\r\n    dispatch(setMax(store.getState().currentData.length))\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      centered\r\n      fullscreen=\"md\"\r\n    >\r\n      <ModalHeader>\r\n        Вы действительно хотите удалить пользователя?\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"fullname\">ФИО:</Label>\r\n            <Input\r\n              disabled={true}\r\n              value={item.name}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"city\">Город:</Label>\r\n            <Input\r\n              disabled={true}\r\n              value={item.city}\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"light\"\r\n          onClick={() => discardHandler()}\r\n        >Отмена</Button>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => deleteHandler()}\r\n        >Удалить</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}","import React from \"react\"\r\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, ModalFooter, Button } from \"reactstrap\"\r\nimport { modalDestroy } from \"../../redux/actions\"\r\nimport { useAppDispatch } from \"../../redux/hooks\"\r\nimport { store } from \"../../redux/store\"\r\nimport { getUserData, fetchData, setData } from \"../../utils/data.functions\"\r\n\r\nexport const ModalEdit: React.FC = () => {\r\n  const id: string = store.getState().modal.id\r\n  const item = getUserData().filter((item) => item.id === id)[0]\r\n\r\n  const [name, setName] = React.useState(item.name)\r\n  const [city, setCity] = React.useState(item.city)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const nameInputHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  const cityInputHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value)\r\n  }\r\n\r\n  const discardHandler = () => {\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  const changeHandler = () => {\r\n    const userData = getUserData()\r\n    userData.forEach((item) => {\r\n      if (item.id === id) {\r\n        item.name = name\r\n        item.city = city\r\n      }\r\n    })\r\n\r\n    const curId = store.getState().auth.id\r\n    const data = fetchData()\r\n    data[curId].data = userData\r\n    setData(data)\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      centered\r\n      fullscreen=\"md\"\r\n    >\r\n      <ModalHeader>\r\n        Редактирование пользователя\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"fullname\">ФИО:</Label>\r\n            <Input\r\n              value={name}\r\n              onChange={(e) => nameInputHandler(e)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"city\">Город:</Label>\r\n            <Input\r\n              value={city}\r\n              onChange={(e) => cityInputHandler(e)}\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => discardHandler()}\r\n        >Отмена</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => changeHandler()}\r\n        >Изменить</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}","import React from \"react\"\r\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, ModalFooter, Button } from \"reactstrap\"\r\nimport { modalDestroy } from \"../../redux/actions\"\r\nimport { useAppDispatch } from \"../../redux/hooks\"\r\nimport { store } from \"../../redux/store\"\r\nimport { getUserName, fetchData, setData } from \"../../utils/data.functions\"\r\n\r\nexport const ModalName: React.FC = () => {\r\n  const [name, setName] = React.useState(getUserName())\r\n  const [isValid, setValid] = React.useState(false)\r\n  const [isInvalid, setInvalid] = React.useState(false)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const nameInputHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value\r\n    setInvalid(false)\r\n    \r\n    if (value.trim().length > 0) {\r\n      setValid(true)\r\n    } \r\n    \r\n    setName(value)\r\n  }\r\n\r\n  const discardHandler = () => {\r\n    dispatch(modalDestroy())\r\n  }\r\n\r\n  const setNameHandler = () => {\r\n    if (name.trim().length > 0) {\r\n      const curId = store.getState().auth.id\r\n      const data = fetchData()\r\n      data[curId].name = name.trim()\r\n      setData(data)\r\n      dispatch(modalDestroy())\r\n    } else {\r\n      setInvalid(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      centered\r\n      fullscreen=\"md\"\r\n    >\r\n      <ModalHeader>\r\n        Изменение ФИО\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"fullname\">Введите ваше ФИО:</Label>\r\n            <Input\r\n              invalid={isInvalid}\r\n              valid={isValid}\r\n              value={name}\r\n              onChange={(e) => nameInputHandler(e)}\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => discardHandler()}\r\n        >Отмена</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => setNameHandler()}\r\n        >Сохранить изменения</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Row, Col, Button } from \"reactstrap\"\r\nimport { logout, ModalNameAction } from \"../redux/actions\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { getUserName } from \"../utils/data.functions\"\r\n\r\nconst SwitchName: React.FC = () => {\r\n  useAppSelector((state) => state.modal)\r\n  \r\n  switch (getUserName()) {\r\n    case '':\r\n      return <>Введите ваше ФИО</>\r\n    default:\r\n      return <>{getUserName()}</>\r\n  }\r\n}\r\n\r\nexport const NavBar: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  const history = useHistory()\r\n  \r\n  const modalTrigger = () => {\r\n    dispatch(ModalNameAction())\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/mtt/login')\r\n  }\r\n\r\n  return (\r\n    <Row className=\"bg-light\">\r\n      <Col className=\"d-flex justify-content-end p-2\">\r\n        <div\r\n          className=\"text-uppercase text-secondary fs-4 font-weight-normal me-3\"\r\n          onClick={() => modalTrigger()}\r\n        ><SwitchName /></div>\r\n        <Button\r\n          className=\"me-3\"\r\n          outline\r\n          size=\"xs\"\r\n          onClick={() => logoutHandler()}\r\n        >Выйти</Button>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React from \"react\"\r\nimport { Row, Col, Button } from \"reactstrap\"\r\nimport { decr, incr } from \"../redux/actions\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\n\r\nexport const Pagination: React.FC = () => {\r\n  const isMax = useAppSelector((state) => state.page.isMax)\r\n  const isMin = useAppSelector((state) => state.page.isMin)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const prevHandler = () => {\r\n    dispatch(decr())\r\n  }\r\n\r\n  const nextHandler = () => {\r\n    dispatch(incr())\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col className=\"mt-4\">\r\n        <Button\r\n          className=\"me-3\"\r\n          outline\r\n          size=\"xs\"\r\n          disabled={isMin}\r\n          onClick={() => prevHandler()}\r\n        >Назад</Button>\r\n        <Button\r\n          outline\r\n          size=\"xs\"\r\n          disabled={isMax}\r\n          onClick={() => nextHandler()}\r\n        >Вперёд</Button>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React from \"react\"\r\nimport { Container } from \"reactstrap\"\r\nimport { AddItem } from \"../components/AddItem\"\r\nimport { EmptyList } from \"../components/EmptyList\"\r\nimport { ItemList } from \"../components/ItemList\"\r\nimport { ModalAdd, ModalName, ModalEdit, ModalDelete } from \"../components/modals\"\r\nimport { NavBar } from \"../components/NavBar\"\r\nimport { Pagination } from \"../components/Pagination\"\r\nimport { setMax, updateLength } from \"../redux/actions\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { $ModalAdd, $ModalDelete, $ModalEdit, $ModalName } from \"../utils/constants\"\r\n\r\nconst SwitchEmptyStatus: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const selectLength = useAppSelector((state) => state.currentData.length)\r\n  dispatch(setMax(selectLength))\r\n\r\n  switch (selectLength) {\r\n    case 0:\r\n      return <EmptyList />\r\n    default:\r\n      return <><ItemList /><Pagination /></>\r\n  }\r\n}\r\n\r\nconst SwitchModalStatus: React.FC = () => {\r\n  const selectModal = useAppSelector((state) => state.modal)\r\n\r\n  switch (selectModal.component) {\r\n    case $ModalAdd:\r\n      return <ModalAdd />\r\n    case $ModalName:\r\n      return <ModalName />\r\n    case $ModalEdit:\r\n      return <ModalEdit />\r\n    case $ModalDelete:\r\n      return <ModalDelete />\r\n    default:\r\n      return <></>\r\n  }\r\n}\r\n\r\nexport const Profile: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  dispatch(updateLength())\r\n\r\n  return (\r\n    <Container fluid>\r\n      <SwitchModalStatus />\r\n      <NavBar />\r\n      <Container>\r\n        <AddItem />\r\n        <SwitchEmptyStatus />\r\n      </Container>\r\n    </Container>\r\n  )\r\n}","import React from \"react\"\r\nimport { Redirect, Route, RouteProps } from \"react-router\"\r\nimport { store } from \"../redux/store\"\r\n\r\n\r\n\r\nexport const ProtectedRoute: React.FC<RouteProps> = ({ ...routeProps }) => {\r\n  const isAuth = store.getState().auth.isAuth\r\n  \r\n  if (isAuth) {\r\n    return <Route {...routeProps} />\r\n  }\r\n\r\n  return <Redirect to=\"/mtt/login\" />\r\n}","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Login } from \"./pages/Login\"\r\nimport { Profile } from \"./pages/Profile\"\r\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\"\r\n\r\nexport const App: React.FC = () => {\r\n  return <Router>\r\n    <Switch>\r\n      <Route path=\"/mtt/login\" component={() => <Login />} />\r\n      <ProtectedRoute path=\"/mtt/profile\" component={() => <Profile />} />\r\n    </Switch>\r\n  </Router>\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}